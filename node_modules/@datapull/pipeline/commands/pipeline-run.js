exports.run = function (pipeline, dryRun) {
  // prepare config:
  let config;
  if (pipeline.configProcessors) {
    console.log('[Pipeline] Run configuration');
    pipeline.configProcessors.forEach(processor => {
      config = processor.process(config || pipeline.config);
    });
  }
  const configNoMetadata = Object.assign({}, config);
  delete config._meta;

  // run origin
  if (!pipeline.origin || !pipeline.origin.runner) {
    console.warn('[Pipeline] this pipeline does not have an origin or an origin runner')
    return;
  }
  return pipeline.origin.runner(config)
    .catch(err => {
      console.error('[Pipeline] failed pulling data from ', pipeline.origin.name, ':', err)
      throw err;
    })
    .then(resp => {
      console.log('resp', resp);
      // run transforms
      console.log('transforms', pipeline.transforms);

      // run destination
      console.log('destination', pipeline.destination);
    });

};
