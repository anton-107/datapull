name: aws-data

description: Collects AWS Costs from Cost Explorer

configure-aws-accounts:
  runner: json-config
  items:
    - acceptance:
        accessKeyId: ${env.AWS_ACCOUNT1_K}
        secretAccessKey: ${env.AWS_ACCOUNT1_S}

collect-costs:
  runner: aws-costexplorer-origin.getCostAndUsage
  costQueryParams:
    Granularity: 'MONTHLY'
    Metrics:
      - 'BlendedCost'
      - 'UnblendedCost'
    GroupBy:
      - Type: 'DIMENSION'
        Key: 'LINKED_ACCOUNT'
    TimePeriod:
      Start: ${moment().add(-1, 'month').startOf('month').format('YYYY-MM-DD')}
      End: ${moment().add(1, 'month').startOf('month').format('YYYY-MM-DD')}
  transform:
    - jsonpath-multistep:
        steps:
          - query: $.ResultsByTime.*
          - query: $.Groups.*
            captureFromPreviousStep:
              TimePeriod: $.TimePeriod
              Estimated: $.Estimated


push-to-kinesis:
  runner: aws-destination.Kinesis.putRecords
  stream: "public-cloud-records"
  accessKeyId: ${env.AWS_D_K}
  secretAccessKey: ${env.AWS_D_S}
  region: eu-west-1
  partitionKey: "single-shard"

  extendMessage:
    _meta:
      eventType: "public-cloud-records"
      producedBy: "datapull.v1"
      timestamp: ${pipeline.timestamp}
      batchId: ${pipeline.uuid}
      messageId: ${uuidv4()}

    billingPeriod: ${moment(rawData.TimePeriod.Start).format('YYYYMM')}
    start: ${rawData.TimePeriod.Start}
    end: ${rawData.TimePeriod.End}
    estimated: ${Boolean(rawData.Estimated)}

    account: ${rawData.Keys[0]}
    amount: ${rawData.Metrics.BlendedCost.Amount}
    currency: ${rawData.Metrics.BlendedCost.Unit}
